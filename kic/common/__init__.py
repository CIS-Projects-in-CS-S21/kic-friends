# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto/common.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class User(betterproto.Message):
    """
    A representation of a User that will be used to identify them between
    services.
    """

    # The ID of the user in the user database, used globally for identification.
    user_id: int = betterproto.int64_field(1)
    # User's account username.
    user_name: str = betterproto.string_field(2)
    # The email registered by this user.
    email: str = betterproto.string_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class File(betterproto.Message):
    """
    A file representation that denotes the name, extension and where to find
    the file. Additionally, arbitrarymetadata is allowed through key value
    pairs, which allows for example a file to be tagged as owned by a
    particularuser.
    """

    # Simply the file name with an extension
    file_name: str = betterproto.string_field(1)
    # This is a client specific file location, for example a google cloud bucket
    # name
    file_location: str = betterproto.string_field(2)
    # Allows for arbitrary key/value metadata which can be client specific
    metadata: Dict[str, str] = betterproto.map_field(
        3, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    date_stored: "Date" = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Date(betterproto.Message):
    """A representation of days of the year including month, year and day."""

    # Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
    # year.
    year: int = betterproto.int32_field(1)
    # Month of a year. Must be from 1 to 12, or 0 to specify a year without a
    # month and day.
    month: int = betterproto.int32_field(2)
    # Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
    # to specify a year by itself or a year and month where the day isn't
    # significant.
    day: int = betterproto.int32_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()
