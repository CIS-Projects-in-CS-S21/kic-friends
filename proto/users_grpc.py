# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: proto/users.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import proto.common_pb2
import proto.users_pb2


class UsersBase(abc.ABC):

    @abc.abstractmethod
    async def GetJWTToken(self, stream: 'grpclib.server.Stream[proto.users_pb2.GetJWTTokenRequest, proto.users_pb2.GetJWTTokenResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AddUser(self, stream: 'grpclib.server.Stream[proto.users_pb2.AddUserRequest, proto.users_pb2.AddUserResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetUserByUsername(self, stream: 'grpclib.server.Stream[proto.users_pb2.GetUserByUsernameRequest, proto.users_pb2.GetUserByUsernameResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetUserByID(self, stream: 'grpclib.server.Stream[proto.users_pb2.GetUserByIDRequest, proto.users_pb2.GetUserByIDResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetUserNameByID(self, stream: 'grpclib.server.Stream[proto.users_pb2.GetUserNameByIDRequest, proto.users_pb2.GetUserNameByIDResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteUserByID(self, stream: 'grpclib.server.Stream[proto.users_pb2.DeleteUserByIDRequest, proto.users_pb2.DeleteUserByIDResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateUserInfo(self, stream: 'grpclib.server.Stream[proto.users_pb2.UpdateUserInfoRequest, proto.users_pb2.UpdateUserInfoResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kic.users.Users/GetJWTToken': grpclib.const.Handler(
                self.GetJWTToken,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.GetJWTTokenRequest,
                proto.users_pb2.GetJWTTokenResponse,
            ),
            '/kic.users.Users/AddUser': grpclib.const.Handler(
                self.AddUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.AddUserRequest,
                proto.users_pb2.AddUserResponse,
            ),
            '/kic.users.Users/GetUserByUsername': grpclib.const.Handler(
                self.GetUserByUsername,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.GetUserByUsernameRequest,
                proto.users_pb2.GetUserByUsernameResponse,
            ),
            '/kic.users.Users/GetUserByID': grpclib.const.Handler(
                self.GetUserByID,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.GetUserByIDRequest,
                proto.users_pb2.GetUserByIDResponse,
            ),
            '/kic.users.Users/GetUserNameByID': grpclib.const.Handler(
                self.GetUserNameByID,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.GetUserNameByIDRequest,
                proto.users_pb2.GetUserNameByIDResponse,
            ),
            '/kic.users.Users/DeleteUserByID': grpclib.const.Handler(
                self.DeleteUserByID,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.DeleteUserByIDRequest,
                proto.users_pb2.DeleteUserByIDResponse,
            ),
            '/kic.users.Users/UpdateUserInfo': grpclib.const.Handler(
                self.UpdateUserInfo,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.users_pb2.UpdateUserInfoRequest,
                proto.users_pb2.UpdateUserInfoResponse,
            ),
        }


class UsersStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetJWTToken = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/GetJWTToken',
            proto.users_pb2.GetJWTTokenRequest,
            proto.users_pb2.GetJWTTokenResponse,
        )
        self.AddUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/AddUser',
            proto.users_pb2.AddUserRequest,
            proto.users_pb2.AddUserResponse,
        )
        self.GetUserByUsername = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/GetUserByUsername',
            proto.users_pb2.GetUserByUsernameRequest,
            proto.users_pb2.GetUserByUsernameResponse,
        )
        self.GetUserByID = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/GetUserByID',
            proto.users_pb2.GetUserByIDRequest,
            proto.users_pb2.GetUserByIDResponse,
        )
        self.GetUserNameByID = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/GetUserNameByID',
            proto.users_pb2.GetUserNameByIDRequest,
            proto.users_pb2.GetUserNameByIDResponse,
        )
        self.DeleteUserByID = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/DeleteUserByID',
            proto.users_pb2.DeleteUserByIDRequest,
            proto.users_pb2.DeleteUserByIDResponse,
        )
        self.UpdateUserInfo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kic.users.Users/UpdateUserInfo',
            proto.users_pb2.UpdateUserInfoRequest,
            proto.users_pb2.UpdateUserInfoResponse,
        )
